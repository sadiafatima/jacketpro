<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009"
			  xmlns:s="library://ns.adobe.com/flex/spark"
			  xmlns:mx="library://ns.adobe.com/flex/halo"
			  creationComplete="addSelectionPanelCallbacks()">
			  
	<fx:Metadata>
        [Event(name="colourChange", type="bms.jacketpro.event.SelectionChangeEvent")]
    </fx:Metadata>
			  
	<fx:Script>
		<![CDATA[
		import bms.jacketpro.event.SelectionChangeEvent
		import flash.events.Event;
		import flash.events.MouseEvent;
		import flash.geom.Point;
		import mx.events.FlexEvent;
        import mx.controls.ToolTip;
        import mx.core.IUIComponent;
		import mx.managers.ToolTipManager;
		import spark.components.NavigatorContent;
		
        public var myTip:ToolTip;

		private var selectedPart:String;
		private var selectedColour:String;
		
		public function addSelectionPanelCallbacks():void
		{
			setDefaultValues();
			parent.addEventListener(SelectionChangeEvent.COLOUR_CHANGE, colourChanged);
			parent.addEventListener(SelectionChangeEvent.PART_CHANGE, partChanged);
		}
		
		public function updateSelectedPart(part:String):void
		{
			selectedPart = part;
			var ev:SelectionChangeEvent = new SelectionChangeEvent(SelectionChangeEvent.PART_CHANGE);
			ev.part = part;
			trace("dispatching part change from preview panel: " + ev.part);
            dispatchEvent(ev);
		}
		
		public function partChanged(event:SelectionChangeEvent):void
		{
			trace("updated Part to : " + event.part);
			selectedPart = event.part;
		}
		
		public function partHovered(part:String, event:MouseEvent):void
		{			
			myTip = ToolTipManager.createToolTip(part, event.stageX, event.stageY-20, null, IUIComponent(event.currentTarget)) as ToolTip;
			
            myTip.setStyle("backgroundColor",0xFFFFFF);
            myTip.width = 50;
            myTip.height = 20;
        }
		
		private function moveToolTip(part:String, event:MouseEvent):void {
			if (myTip != null)
			{
				stopHover(event);
				partHovered(part, event);
			}
		}

        private function stopHover(event:MouseEvent):void {
            if (myTip != null)
			{
				ToolTipManager.destroyToolTip(myTip);
				myTip = null;
			}
			trace("my tip is " + myTip);
        }
		
		public function colourChanged(event:SelectionChangeEvent):void
		{
			trace("updated colour to " + event.colour);
			selectedColour = event.colour;
			updateImages();
		}
		
		private function setDefaultValues():void
		{
			selectedColour = "brown";
			selectedPart = "body";
			collarImg.source = "assets/women/collar/" + pathSuffix();
			bodyImg.source = "assets/women/body/" + pathSuffix();
			leftsleeveImg.source = "assets/women/leftsleeve/" + pathSuffix();
			rightsleeveImg.source = "assets/women/rightsleeve/" + pathSuffix();
		}
		
		private function updateImages():void
		{
			trace("updating images");
			if (selectedPart == "collar")
				collarImg.source = "assets/women/collar/" + pathSuffix();
			else if (selectedPart == "body")
				bodyImg.source = "assets/women/body/" + pathSuffix();
			else if (selectedPart == "sleeves")
			{
				leftsleeveImg.source = "assets/women/leftsleeve/" + pathSuffix();
				rightsleeveImg.source = "assets/women/rightsleeve/" + pathSuffix();
			}
				
			trace("C: " + collarImg.source);
			trace("B: " + bodyImg.source);
			trace("L: " + leftsleeveImg.source);
			trace("R: " + rightsleeveImg.source);
		}
		
		private function pathSuffix():String
		{
			return "front/" + selectedColour + ".png";
		}
		
		]]>
	</fx:Script>

	<s:SkinnableContainer id="bodyContainer" x="56" y="46" width="143" height="166" 
		mouseOver="partHovered('body', event);" mouseOut="stopHover(event)" mouseMove="moveToolTip('body', event)" click="updateSelectedPart('body')" >
		<s:Image id="bodyImg" clearOnLoad="false" />
	</s:SkinnableContainer>
	
	<s:SkinnableContainer id="collarContainer" x="93" y="28" width="69" height="154"
		mouseOver="partHovered('collar', event);" mouseOut="stopHover(event)" mouseMove="moveToolTip('collar', event)" click="updateSelectedPart('collar')">
		<s:Image id="collarImg" clearOnLoad="false" />		
	</s:SkinnableContainer>
				
	<s:SkinnableContainer id="leftsleeveContainer" x="22" y="65" width="46" height="131"
		mouseOver="partHovered('sleeves', event);" mouseOut="stopHover(event)" mouseMove="moveToolTip('sleeves', event)" click="updateSelectedPart('sleeves')">		
		<s:Image id="leftsleeveImg" clearOnLoad="false" />
	</s:SkinnableContainer>
	
	<s:SkinnableContainer id="rightsleeveContainer" x="181" y="62" width="56" height="134"
		mouseOver="partHovered('sleeves', event);" mouseOut="stopHover(event)" mouseMove="moveToolTip('sleeves', event)" click="updateSelectedPart('sleeves')">
		<s:Image id="rightsleeveImg" clearOnLoad="false" />
	</s:SkinnableContainer>
	
</s:Group>
